name,ring,quadrant,isNew,description
Flutter,Hold,languages-and-frameworks,,"Cross platform UI Framework, will probably be the next platform for Android<br/><br/><strong>Vendor: </strong><em>Google</em><br/><strong>Assessed by: </strong><em>Julian Exenberger</em><br/><strong>Last assessment date: </strong><em>Q1 - 2020</em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em>No</em><br/><strong>Value: </strong><em></em>"
Blazor,Hold,languages-and-frameworks,,UI technology to replace MVC forms as well as SPA with all of the existing benefits<br/><br/><strong>Vendor: </strong><em>Microsoft</em><br/><strong>Assessed by: </strong><em>Saša Slankamenac</em><br/><strong>Last assessment date: </strong><em>Q1 - 2022</em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em>No</em><br/><strong>Value: </strong><em></em>
Application Insights,Assess,Tools,,Azure technology to monitor a combination of cloud and on premises nodes. Complex solution deployment landscapes.<br/><br/><strong>Vendor: </strong><em>Microsoft</em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em></em><br/><strong>Value: </strong><em>Monitoring of complex systems requires non-intrusive instrumentation. This provides the cloud bridge that SCOM plays with on premises infrastructure and application landscapes.</em>
Node.JS,Hold,languages-and-frameworks,,Node.js® is a JavaScript runtime built on Chrome's V8 JavaScript engine. JS on the backend. <br/><br/><strong>Vendor: </strong><em>Node</em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em>Limited</em><br/><strong>Should we adopt?: </strong><em>Yes</em><br/><strong>Value: </strong><em></em>
Rust,Adopt,languages-and-frameworks,,"Rust is blazingly fast and memory-efficient: with no runtime or garbage collector, it can power performance-critical services, run on embedded devices, and easily integrate with other languages<br/><br/><strong>Vendor: </strong><em>Mozilla</em><br/><strong>Assessed by: </strong><em>Saša Slankamenac</em><br/><strong>Last assessment date: </strong><em>Q3 - 2022</em><br/><strong>Customer demand: </strong><em>Limited</em><br/><strong>Should we adopt?: </strong><em>Yes</em><br/><strong>Value: </strong><em>mature enough to be used in micro-service architectures for web API micro service deployments as container orchestrated pods in k8s or serverless eg AWS lambda functions where processing performance and memory management are critical</em>"
Cloud RPA,Assess,Techniques,,RPA architectures that use Cloud for RPA<br/><br/><strong>Vendor: </strong><em>Microsoft/Amazon</em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em></em><br/><strong>Value: </strong><em></em>
Kotlin,Assess,languages-and-frameworks,,"Cross platform programming which runs on Java/Native and JavaScript, default programming language for Android, is a drop in replacement for Java on the Server<br/><br/><strong>Vendor: </strong><em>Jetbrains</em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em>Limited</em><br/><strong>Should we adopt?: </strong><em>No</em><br/><strong>Value: </strong><em></em>"
JetPack Compose,Assess,languages-and-frameworks,,Kotlin based competitor to Flutter<br/><br/><strong>Vendor: </strong><em>Jetbrains/Google</em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em>No</em><br/><strong>Value: </strong><em></em>
GraphQL,Hold,Tools,,Open standard acts as a layer between an API endpoint and data storage layer (eg database)<br/><br/><strong>Vendor: </strong><em>Facebook</em><br/><strong>Assessed by: </strong><em>Saša Slankamenac</em><br/><strong>Last assessment date: </strong><em>Q2 - 2022</em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em>Yes</em><br/><strong>Value: </strong><em>For developing data-centric Web APIs. Provides a query configuration allowing clients to retrieve data from a server declaratively for specific data in the schema required by the client as well as data in a nested schema representing a collection from many sources in a single request</em>
React.js,Assess,languages-and-frameworks,,Javascript development framework like Angular<br/><br/><strong>Vendor: </strong><em>Facebook</em><br/><strong>Assessed by: </strong><em>Parfait Nzamba</em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em>Limited</em><br/><strong>Should we adopt?: </strong><em>Yes</em><br/><strong>Value: </strong><em></em>
PrestoDB,Assess,Tools,True,"Tool to virtualise data across multiuple data sources and db types, forms core of AWS Athena<br/><br/><strong>Vendor: </strong><em>Netflix</em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em></em><br/><strong>Value: </strong><em></em>"
PouchDB,Hold,Tools,,"Helps develop web applications that work as well offline as they do online. PouchDB is an open-source JavaScript database inspired by Apache CouchDB and designed to run within the browser.<br/><br/><strong>Vendor: </strong><em>PouchDB</em><br/><strong>Assessed by: </strong><em>Saša Slankamenac</em><br/><strong>Last assessment date: </strong><em>Q3 - 2022</em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em>No</em><br/><strong>Value: </strong><em>enables applications to store data locally while offline, then synchronize it with CouchDB and compatible servers when the application is back online, keeping the user's data in sync no matter where they next login</em>"
CouchDB,Assess,Tools,,"CouchDB is a server host of named databases, which store documents. Provides a RESTful HTTP API for reading and updating (add, edit, delete) documents, the primary unit of data. Single-node DB works just like any other DB behind an application server of choice and can be upgraded to a cluster. <br/><br/><strong>Vendor: </strong><em>Apache Software Foundation</em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em></em><br/><strong>Value: </strong><em>Couch Replication Protocol lets data flow between server clusters and mobile phones and web browsers, enabling a offline-first UX; comes with a query language, and optionally MapReduce for data retrieval</em>"
Vue,Trial,languages-and-frameworks,,"Vue is like the best of React and Angular. It has a nice concept of a .vue file which can HTML, Javascript and CSS in a single file that is properly scoped. It uses the shadow DOM similar to React and template syntax similar to Angular. It is also arguably more community driven than Angular and React. <br/><br/><strong>Vendor: </strong><em>Vuejs</em><br/><strong>Assessed by: </strong><em>Saša Slankamenac</em><br/><strong>Last assessment date: </strong><em>Q1 - 2022</em><br/><strong>Customer demand: </strong><em>Limited</em><br/><strong>Should we adopt?: </strong><em>Yes</em><br/><strong>Value: </strong><em>Javascript framework alternative offering to Angular and React </em>"
"Svelte, TailwindCSS",Assess,languages-and-frameworks,,This is more about these types of libraries: https://changelog.com/jsparty/199<br/><br/><strong>Vendor: </strong><em></em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em></em><br/><strong>Value: </strong><em>Javascript framework alternative offering to Angular and React </em>
Functional Java,Assess,Techniques,True,"java.util.Function, this leads to rather different looking Java code (more static functions) and might actually lead to a kotlin/scala adoption.<br/><br/><strong>Vendor: </strong><em></em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em></em><br/><strong>Value: </strong><em></em>"
OpenTelemetry,Assess,Tools,True,A more unified way to do logging/tracing etc that is based on standards. This would need some investigation but it can help with tracing between different languages and even cloud deployments but still allow taking advantage of the native features.<br/><br/><strong>Vendor: </strong><em></em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em></em><br/><strong>Value: </strong><em>https://docs.microsoft.com/en-us/azure/azure-monitor/app/opentelemetry-overview    https://aws.amazon.com/blogs/opensource/distributed-tracing-with-opentelemetry/   https://cloud.google.com/trace/docs/setup</em>
Go (aka GoLang),Hold,languages-and-frameworks,,Embedded systems / IoT languages (C/C++ and Rust competitor - most container orchestration space source eg k8s writtend in Go)<br/><br/><strong>Vendor: </strong><em>Google</em><br/><strong>Assessed by: </strong><em>Saša Slankamenac</em><br/><strong>Last assessment date: </strong><em>Q2 - 2022</em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em>No</em><br/><strong>Value: </strong><em></em>
Typescript,Hold,languages-and-frameworks,,Typescript and Python show an appetite for more expressive type systems beyond just specifying memory sizes. An example of this are literal types in Typescript. They can be achieved in Java using enums but they look cleaner in Typescript.<br/><br/><strong>Vendor: </strong><em>Microsoft</em><br/><strong>Assessed by: </strong><em>Saša Slankamenac</em><br/><strong>Last assessment date: </strong><em>Q1 - 2022</em><br/><strong>Customer demand: </strong><em>Limited</em><br/><strong>Should we adopt?: </strong><em>Yes</em><br/><strong>Value: </strong><em></em>
Python,Assess,languages-and-frameworks,,"Probably the best ""glue"" language. Python can cover a wide range of areas from build scripts (such as when working with CDKs and the like for AWS and Azure) or Web development or (currently it's biggest strength, ML and AI) Python can do a good enough job that it can be a while before it's perfomance limit can be reached. It has an advantage over JS in that it still has ""winners"" where one methodology is clearly prerffered over another. This is contrasted with JS where you have many frameworks and libraries and deciding which one to use depends on nuance.<br/><br/><strong>Vendor: </strong><em></em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em></em><br/><strong>Value: </strong><em></em>"
Micro Front Ends,Assess,Techniques,True,<br/><br/><strong>Vendor: </strong><em></em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em></em><br/><strong>Value: </strong><em></em>
Containers,Assess,Platforms,,"a container is a group of processes with kernel features which allow the processes to behave as though they’re running on their own separate OS instance (typically a virtual machine)

the host OS instance (usually a VM) runs the container as a process, emulated internally inside the container as a separate OS instance (typically a virtual machine)

*nix kernel features which make this possible are:

    namespaces = Namespaces are the feature that make the container look and feel like it is an entirely separate machine
    cgroups = A way to group or contain processes together in the kernel and limit and define resources for that grouping (developed at Google in 2006 and first called “process containers”)
    capabilities = A list of the superuser privileges that can be enabled or disabled for any process<br/><br/><strong>Vendor: </strong><em></em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em></em><br/><strong>Value: </strong><em></em>"
Container Orchestration,Hold,Platforms,,"Kubernetes is an open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation
A Kubernetes cluster consists of the components that represent the control plane and a set of machines called nodes<br/><br/><strong>Vendor: </strong><em>Google</em><br/><strong>Assessed by: </strong><em>Saša Slankamenac</em><br/><strong>Last assessment date: </strong><em>Q3 - 2021</em><br/><strong>Customer demand: </strong><em>High</em><br/><strong>Should we adopt?: </strong><em>Yes</em><br/><strong>Value: </strong><em></em>"
DevSecOps,Assess,Techniques,True,"DevSecOps is a word I've heard about where Developer, Security and Operations work together to make make sure security is built into services, application etc https://www.devsecops.org/ <br/><br/><strong>Vendor: </strong><em></em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em></em><br/><strong>Value: </strong><em></em>"
Pipelines,Assess,Techniques,,Automating the path to production. Making it as short as possible while being secure. Pipelines can include culture nudges such as testing and linting and code complexity checks (SonarQube is one I've seen in 2 places used for these). The big cloud providers have their own pipelines but gitlab I think might be popular since it can be self hosted and thus cheaper. github pipelines are also getting a lot of buzz in various podcasts. There is also independent ones such as CircleCI and TravisCI.<br/><br/><strong>Vendor: </strong><em></em><br/><strong>Assessed by: </strong><em></em><br/><strong>Last assessment date: </strong><em></em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em></em><br/><strong>Value: </strong><em></em>
AWS ,Hold,Platforms,,<br/><br/><strong>Vendor: </strong><em>Amazon</em><br/><strong>Assessed by: </strong><em>Saša Slankamenac</em><br/><strong>Last assessment date: </strong><em>Q3 - 2021</em><br/><strong>Customer demand: </strong><em>High</em><br/><strong>Should we adopt?: </strong><em>Yes</em><br/><strong>Value: </strong><em></em>
gRPC,Hold,languages-and-frameworks,,"open-sourced API-to-API Remote Procedure Calling framework <br/><br/><strong>Vendor: </strong><em>Google</em><br/><strong>Assessed by: </strong><em>Saša Slankamenac</em><br/><strong>Last assessment date: </strong><em>Q2 - 2022</em><br/><strong>Customer demand: </strong><em></em><br/><strong>Should we adopt?: </strong><em>No</em><br/><strong>Value: </strong><em>primaryily suited for direct, synchronous communication between microservices</em>"
Azure,Hold,Platforms,,<br/><br/><strong>Vendor: </strong><em>Microsoft</em><br/><strong>Assessed by: </strong><em>Saša Slankamenac</em><br/><strong>Last assessment date: </strong><em>Q3 - 2021</em><br/><strong>Customer demand: </strong><em>High</em><br/><strong>Should we adopt?: </strong><em>Yes</em><br/><strong>Value: </strong><em></em>
